P4.26. Qual a utilidade da estrutura de repetição?

R=  A estrutura de repetição permite que uma seqüência de comandos seja executada repetidamente
enquanto uma determinada condição for satisfeita.

____________________________________________________________________________________________________
P4.27. Em que consiste o controle de repetições por contador?

R= Consiste em quando o número de repetições for previamente conhecido, devemos utilizar um contador
para controlar o número de repetições do laço.

_____________________________________________________________________________________________________
P4.28. Em que consiste o controle de repetições por flag?

R= Consiste em quando não conhecemos o número de repetições e este for determinado por um valor que será
lido (que chamamos de flag), devemos utilizar um controle de repetições por entrada, também conhecido
como controle por sentinela.

_____________________________________________________________________________________________________

P4.29. Faça o acompanhamento da execução do algoritmo abaixo e preencha a Tabela de Variáveis:

TRECHO DE ALGORITMO        	|TABELA DE VARIÁVEIS
-------------------------------------------------------------																											|
				|N	L	N ¹ 6	 Saída
N fl 0				|1	-1	True	   -  
				|2	1	True	   2  
L fl 1				|3	-1	True	   -  
enquanto N ¹ 6 faça		|4	1	True	   4  
 L fl L * (-1)			|5	-1	True	   -  
 N fl N + 1			|6	1	False	   6  
 se L > 0			|
 então escreva N		|
 fim-sE				|
fim-enquanto			|





______________________________________________________________________________________________________
P4.30. Faça um algoritmo que mostre todos os números inteiros de 1 a 50.

num = 1
while num <= 50:
    print(num)
    num = 1 + num


_______________________________________________________________________________________________________
P4.31. Faça um algoritmo que mostre todos os números inteiros pares de 2 a 100.

num = 2
while (num % 2 == 0) and num <= 100:
    print(num)
    num = num + 2


______________________________________________________________________________________________________
P4.32. Faça um algoritmo que gere a seguinte série: 10, 20, 30, 40, ..., 990, 1000.

num = 10
while (num % 10 == 0) and num <= 1000:
    print(num)
    num = num + 10

_______________________________________________________________________________________________________
P4.33. Faça um algoritmo para gerar e exibir os números inteiros de 100 até 1, decrescendo de 1 em 1.

N = int(input("Digite um número inteiro: "))
while N >= 1 and N <= 100:
	print(N)
	N = N - 1



__________________________________________________________
P4.34. Faça um algoritmo que leia um número N, some todos os números inteiros de 1 a N, e mostre o resultado obtido.


numerodesejado = int(input("Digite o número que deseja: "))

num = 1
soma = 0
while num <= numerodesejado:
    soma=num+soma
    num =1+num

print(soma)
   

